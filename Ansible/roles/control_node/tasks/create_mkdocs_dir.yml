- name: Ensure git is installed
  become: yes
  package:
    name: git
    state: present
    use: apt

- name: Create project directory
  file:
    path: "{{ project_path }}"
    state: directory

- name: Check if Git remote origin is set
  command: git remote
  args:
    chdir: "{{ project_path }}"
  register: git_remote
  failed_when: false
  changed_when: false

- name: Set global Git user name
  git_config:
    name: user.name
    value: "{{ git_username }}"
    scope: global
  when: git_remote.stdout == ""

- name: Set global Git user email
  git_config:
    name: user.email
    value: "{{ git_email }}"
    scope: global
  when: git_remote.stdout == ""

- name: Initialize the local Git repository
  command: git init
  args:
    chdir: "{{ project_path }}"
  when: git_remote.stdout == ""

- name: Create gitignore
  copy:
    dest: "{{ project_path }}/.gitignore"
    content: |
      venv/
  when: git_remote.stdout == ""

- name: Commit an empty commit to the main branch
  command: git commit --allow-empty -m "Initial commit"
  args:
    chdir: "{{ project_path }}"
  when: git_remote.stdout == ""

- name: Create the main branch
  command: git branch -M main
  args:
    chdir: "{{ project_path }}"
  when: git_remote.stdout == ""

- name: Set remote repository URL
  command: git remote add origin {{ mkdocs_repo_url }}
  args:
    chdir: "{{ project_path }}"
  when: git_remote.stdout == ""
  
- name: Push the main branch
  command: git push --set-upstream origin main
  args:
    chdir: "{{ project_path }}"
  when: git_remote.stdout == ""
