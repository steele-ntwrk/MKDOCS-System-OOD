- name: Ensure git is installed
  become: yes
  package:
    name: git
    state: present

- name: Set project path
  set_fact:
    project_path: "{{ base_path }}/{{ project_name }}"

- name: Create project directory
  file:
    path: "{{ project_path }}"
    state: directory

- name: Create mkdocs docs directory
  file:
    path: "{{ project_path }}/docs"
    state: directory

- name: Set global Git user name
  git_config:
    name: user.name
    value: "{{ git_username }}"
    scope: global

- name: Set global Git user email
  git_config:
    name: user.email
    value: "{{ git_email }}"
    scope: global

- name: Check if remote repository exists
  command: git ls-remote {{ mkdocs_repo_url }}
  register: remote_repo_exists
  ignore_errors: yes

- name: Clone the remote repository if it exists
  git:
    repo: "{{ mkdocs_repo_url }}"
    dest: "{{ project_path }}"
    version: main
    accept_hostkey: yes
    key_file: "/home/matts/.ssh/id_rsa"
  when: remote_repo_exists.rc == 0
  ignore_errors: yes
  register: git_clone

- name: Initialize the local Git repository if clone failed or remote does not exist
  command: git init
  args:
    chdir: "{{ project_path }}"
  when: remote_repo_exists.rc != 0 or git_clone is failed
  register: git_init

- name: Add remote repository if it doesn't exist
  command: git remote add origin {{ mkdocs_repo_url }}
  args:
    chdir: "{{ project_path }}"
  when: remote_repo_exists.rc != 0 or git_clone is failed

- name: Create the main branch if it doesn't exist
  command: git checkout -b main
  args:
    chdir: "{{ project_path }}"
  when: remote_repo_exists.rc != 0 or git_clone is failed
  register: branch_created

- name: Commit an empty commit to the main branch if just created
  command: git commit --allow-empty -m "Initial commit"
  args:
    chdir: "{{ project_path }}"
  when: branch_created is changed

- name: Push the main branch if just created
  command: git push -u origin main
  args:
    chdir: "{{ project_path }}"
  when: branch_created is changed
