- name: Ensure git is installed
  become: yes
  package:
    name: git
    state: present

- name: Create directory project
  file:
    path: "{{ base_path }}/{{ project_name }}"
    state: directory

-- name: Create directory project
  file:
    path: "{{ base_path }}/{{ project_name }}/docs"
    state: directory

- name: Set global Git user name
  git_config:
    name: user.name
    value: "{{ git_username }}"
    scope: global

- name: Set global Git user email
  git_config:
    name: user.email
    value: "{{ git_email }}"
    scope: global

- name: Initialize the local Git repository
  command: git init
  args:
    chdir: "{{ base_path }}/{{ project_name }}"
  register: project_path

- name: Add the remote repository
  git:
    repo: "{{ mkdocs_repo_url }}"
    dest: "{{ project_path }}"
    version: "main"  # or your default branch name
    accept_hostkey: yes  # if you want to auto-accept the hostkey (not recommended for production)
    key_file: "/home/matts/.ssh/id_rsa"  # specify your SSH private key file
    force: yes  # use with caution, this can overwrite local changes

- name: Create directory for system
  file:
    path: "{{ base_path }}/{{ system_item.name }}/{{ item }}"
    state: directory
  loop: "{{ supporting_folders }}"

- name: Include task to create directories for each subsystem
  include_tasks: create_subsystem_dirs.yml
  loop: "{{ system_item.subsystems | default([]) }}"
  loop_control:
    loop_var: subsystem_item
  when: subsystem_item is defined